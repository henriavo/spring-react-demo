<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.5.6</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>org.henri.project</groupId>
	<artifactId>spring-react-demo</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>spring-react-demo</name>
	<description>Demo project for Spring and React</description>
	<properties>
		<java.version>8</java.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-rest</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-websocket</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.thymeleaf.extras</groupId>
			<artifactId>thymeleaf-extras-springsecurity5</artifactId>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<!-- While you can install all of JavaScripts command line tools,
				you need not do so - at least, not yet.	-->
			<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<version>1.12.0</version>

				<executions>
					<execution>
						<!-- optional: you don't really need execution ids, but it looks nice in your build log. -->
						<id>install node and npm</id>
						<goals>
							<goal>install-node-and-npm</goal>
						</goals>
						<!-- optional: default phase is "generate-resources" -->
						<phase>generate-resources</phase>
<!--  the below section is known as "Available parameters" in docs -->
						<configuration>
							<!-- See https://nodejs.org/en/download/ for latest node and npm (lts) versions -->
							<nodeVersion>v14.15.4</nodeVersion>
							<npmVersion>6.14.11</npmVersion>
						</configuration>

					</execution>
					<execution>
						<id>NPM INSTALL</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<!-- optional: default phase is "generate-resources" -->
						<phase>generate-resources</phase>
						<configuration>
							<!-- optional: The default argument is actually
                            "install", so unless you need to run some other npm command,
                            you can remove this whole <configuration> section.
                            -->
							<arguments>install</arguments>
						</configuration>
					</execution>
					<execution>
						<id>WEBPACK</id>
						<goals>
							<goal>webpack</goal>
						</goals>
						<!-- optional: default phase is "generate-resources" -->
						<phase>generate-resources</phase>
						<configuration>
						</configuration>
					</execution>

				</executions>
				<configuration>
					<nodeVersion>v14.15.4</nodeVersion>

					<!-- optional: with node version greater than 4.0.0 will use npm provided by node distribution -->
<!--					<npmVersion>2.15.9</npmVersion>-->

					<!-- optional: where to download node and npm from. Defaults to https://nodejs.org/dist/ -->
<!--					<downloadRoot>http://myproxy.example.org/nodejs/</downloadRoot>-->
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
